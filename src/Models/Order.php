<?php

declare(strict_types=1);

/*
 * SwaggerPetstoreOpenAPI30Lib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SwaggerPetstoreOpenAPI30Lib\Models;

use Core\Utils\XmlDeserializer;
use Core\Utils\XmlSerializer;
use stdClass;
use SwaggerPetstoreOpenAPI30Lib\ApiHelper;
use SwaggerPetstoreOpenAPI30Lib\Utils\DateTimeHelper;

class Order implements \JsonSerializable
{
    /**
     * @var int|null
     */
    private $id;

    /**
     * @var int|null
     */
    private $petId;

    /**
     * @var int|null
     */
    private $quantity;

    /**
     * @var \DateTime|null
     */
    private $shipDate;

    /**
     * @var string|null
     */
    private $status;

    /**
     * @var bool|null
     */
    private $complete;

    /**
     * Returns Id.
     */
    public function getId(): ?int
    {
        return $this->id;
    }

    /**
     * Sets Id.
     *
     * @maps id
     */
    public function setId(?int $id): void
    {
        $this->id = $id;
    }

    /**
     * Returns Pet Id.
     */
    public function getPetId(): ?int
    {
        return $this->petId;
    }

    /**
     * Sets Pet Id.
     *
     * @maps petId
     */
    public function setPetId(?int $petId): void
    {
        $this->petId = $petId;
    }

    /**
     * Returns Quantity.
     */
    public function getQuantity(): ?int
    {
        return $this->quantity;
    }

    /**
     * Sets Quantity.
     *
     * @maps quantity
     */
    public function setQuantity(?int $quantity): void
    {
        $this->quantity = $quantity;
    }

    /**
     * Returns Ship Date.
     */
    public function getShipDate(): ?\DateTime
    {
        return $this->shipDate;
    }

    /**
     * Sets Ship Date.
     *
     * @maps shipDate
     * @factory \SwaggerPetstoreOpenAPI30Lib\Utils\DateTimeHelper::fromRfc3339DateTime
     */
    public function setShipDate(?\DateTime $shipDate): void
    {
        $this->shipDate = $shipDate;
    }

    /**
     * Returns Status.
     * Order Status
     */
    public function getStatus(): ?string
    {
        return $this->status;
    }

    /**
     * Sets Status.
     * Order Status
     *
     * @maps status
     * @factory \SwaggerPetstoreOpenAPI30Lib\Models\OrderStatusEnum::checkValue
     */
    public function setStatus(?string $status): void
    {
        $this->status = $status;
    }

    /**
     * Returns Complete.
     */
    public function getComplete(): ?bool
    {
        return $this->complete;
    }

    /**
     * Sets Complete.
     *
     * @maps complete
     */
    public function setComplete(?bool $complete): void
    {
        $this->complete = $complete;
    }

    /**
     * Converts the Order object to a human-readable string representation.
     *
     * @return string The string representation of the Order object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'Order',
            [
                'id' => $this->id,
                'petId' => $this->petId,
                'quantity' => $this->quantity,
                'shipDate' => $this->shipDate,
                'status' => $this->status,
                'complete' => $this->complete
            ]
        );
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->id)) {
            $json['id']       = $this->id;
        }
        if (isset($this->petId)) {
            $json['petId']    = $this->petId;
        }
        if (isset($this->quantity)) {
            $json['quantity'] = $this->quantity;
        }
        if (isset($this->shipDate)) {
            $json['shipDate'] = DateTimeHelper::toRfc3339DateTime($this->shipDate);
        }
        if (isset($this->status)) {
            $json['status']   = OrderStatusEnum::checkValue($this->status);
        }
        if (isset($this->complete)) {
            $json['complete'] = $this->complete;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }

    /**
     * Encode this object to XML
     */
    public function toXmlElement(XmlSerializer $serializer, \DOMElement $element): void
    {
        $serializer->addAsSubelement($element, 'id', $this->id);
        $serializer->addAsSubelement($element, 'petId', $this->petId);
        $serializer->addAsSubelement($element, 'quantity', $this->quantity);
        $serializer->addAsSubelement($element, 'shipDate', DateTimeHelper::toRfc3339DateTime($this->shipDate));
        $serializer->addAsSubelement($element, 'status', OrderStatusEnum::checkValue($this->status));
        $serializer->addAsSubelement($element, 'complete', $this->complete);
    }

    /**
     * Create a new instance of this class from an XML Element
     */
    public static function fromXmlElement(XmlDeserializer $serializer, \DOMElement $element)
    {

        $instance = new self();

        $id = $serializer->fromElement($element, 'id', '?int');
        $instance->setId($id);

        $petId = $serializer->fromElement($element, 'petId', '?int');
        $instance->setPetId($petId);

        $quantity = $serializer->fromElement($element, 'quantity', '?int');
        $instance->setQuantity($quantity);

        $shipDate = $serializer->fromElement($element, 'shipDate', '?string');
        $shipDate = isset($shipDate) ?
            \SwaggerPetstoreOpenAPI30Lib\Utils\DateTimeHelper::fromRfc3339DateTime($shipDate) : null;
        $instance->setShipDate($shipDate);

        $status = $serializer->fromElement($element, 'status', '?string');
        $status = isset($status) ?
            \SwaggerPetstoreOpenAPI30Lib\Models\OrderStatusEnum::checkValue($status) : null;
        $instance->setStatus($status);

        $complete = $serializer->fromElement($element, 'complete', '?bool');
        $instance->setComplete($complete);

        return $instance;
    }
}
